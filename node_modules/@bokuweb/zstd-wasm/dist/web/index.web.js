var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { Module, waitInitialized } from './module';
export const init = (path) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const url = require('./wasm/zstd.wasm');
    Module['init']((_a = path !== null && path !== void 0 ? path : url.default) !== null && _a !== void 0 ? _a : url);
    yield waitInitialized();
});
export * from './simple/decompress';
export * from './simple/compress';
export * from './simple/decompress_using_dict';
export * from './simple/compress_using_dict';
//# sourceMappingURL=index.web.js.map